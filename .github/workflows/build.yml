name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [ '1.17', '1.18', '1.19', '1.20' ]

    steps:
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: go build -v .

  binaries:
    name: Generate binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: 'windows'
            arch: 'amd64'
          - os: 'linux'
            arch: 'amd64'
          - os: 'darwin'
            arch: 'amd64'
          - os: 'darwin'
            arch: 'arm64'

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -trimpath -buildvcs=true -o seafile-browse_${{ matrix.os }}_${{ matrix.arch }} -v .

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: seafile-browse_${{ matrix.os }}_${{ matrix.arch }}
        path: seafile-browse_${{ matrix.os }}_${{ matrix.arch }}